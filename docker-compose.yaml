version: '3.8'

services:
  db:
    image: postgres:15
    container_name: demo-postgres
    restart: always
    environment:
      - POSTGRES_USER=demo-user
      - POSTGRES_PASSWORD=demo-password
      - POSTGRES_DB=demo
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth=md5
    volumes:
      - demo-db-data:/var/lib/postgresql/data

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: 'pgbouncer'
    environment:
      - DATABASE_URL=postgres://demo-user:demo-password@db:5432/demo
      - POOL_MODE=transaction
      - MAX_DB_CONNECTIONS=100
      - DEFAULT_POOL_SIZE=40
      - AUTH_TYPE=md5
    depends_on:
      - db
    ports:
      - "6432:5432"
    restart: on-failure

  redis:
    image: redis:latest
    container_name: demo-redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - demo-redis-data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.enabled=false  # Disable authentication
      - xpack.security.encryptionKey=“something_at_least_32_characters”
      - xpack.encryptedSavedObjects.encryptionKey:“something_at_least_32_characters”
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.5.3
    container_name: apm-server
    command: [ "apm-server", "-e" ]
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch

volumes:
  demo-db-data:
  demo-redis-data:
